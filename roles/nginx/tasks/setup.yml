---

- name: Create Directory /var/www/nginx/cache
  file: path=/var/www/nginx/cache state=directory owner=www-data mode=0777

- name: Copy nginx defaults
  template: src=nginx.j2 dest=/etc/default/nginx
  notify: reload nginx

- name: Copy nginx configuration
  template: src=nginx.conf.j2 dest=/etc/nginx/nginx.conf
  notify: reload nginx
  tags: [nginx_config]

- name: Remove default site config file
  file: path=/etc/nginx/sites-enabled/default state=absent

- name: Copy nginx logrotate configuration file
  template: src=nginx.logrotate.j2 dest=/etc/logrotate.d/nginx
  tags: [nginx_config]

- name: Enable site
  file: src=/etc/nginx/sites-available/{{ item }} dest=/etc/nginx/sites-enabled/{{ item }} state=link
  with_items: "{{app_config[app_name].server_hostname}}"
  when: app_config[app_name].server_hostname != ''
  notify: reload nginx
  tags: [nginx_config]

- name: Keep nginx service running
  service: name=nginx state=started

- meta: flush_handlers

- name: Turn maintenance on, change symlink to maintenance config
  file: src=/etc/nginx/sites-available/maintenance-{{ item }} dest=/etc/nginx/sites-enabled/{{ item }} state=link
  with_items: app_config[app_name].server_hostname
  when: app_config[app_name].server_hostname != ''
  tags: maintenance-start
  ignore_errors: yes

- name: Turn maintenance off, change symlink to real config
  file: src=/etc/nginx/sites-available/{{ item }} dest=/etc/nginx/sites-enabled/{{ item }} state=link
  with_items: app_config[app_name].server_hostname
  when: app_config[app_name].server_hostname != ''
  tags: maintenance-stop
  ignore_errors: yes

- name: Test Nginx
  shell: 'nginx -t || abort "Nginx: Configuration Test Failed"'
  notify: reload nginx
  tags: [nginx_config,nginx_reload,update,maintenance-start,maintenance-stop]
